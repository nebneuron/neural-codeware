function cvBool = IsInTriangle(X, P, Q, R)
    % I think that this basically compares slopes of lines.  I don't
    % know.  It's Vladimir's algorithm.  I'm sure that there's a better
    % way to do this (in terms of the code duplication, at least).
    cvBool ...
        =  ((-P(:, 2) + Q(:, 2)) .* (Q(:, 1) - R(:, 1)) ...
            + (P(:, 1) - Q(:, 1)) .* (Q(:, 2) - R(:, 2))) ...
        .* ((-P(:, 2) + Q(:, 2)) .* (Q(:, 1) - X(:, 1)) ...
            + (P(:, 1) - Q(:, 1)) .* (Q(:, 2) - X(:, 2))) ...
        > 0;

    cvBool = cvBool ...
             .* ((-P(:, 2) + R(:, 2)) .* (R(:, 1) - Q(:, 1)) ...
                 + (P(:, 1) - R(:, 1)) .* (R(:, 2) - Q(:, 2))) ...
             .* ((-P(:, 2) + R(:, 2)) .* (R(:, 1) - X(:, 1)) ...
                 + (P(:, 1) - R(:, 1)) .* (R(:, 2) - X(:, 2))) ...
             >0;

    cvBool = cvBool ...
             .* ((-R(:, 2) + Q(:, 2)) .* (Q(:, 1) - P(:, 1)) ...
                 + (R(:, 1) - Q(:, 1)) .* (Q(:, 2) - P(:, 2))) ...
             .* ((-R(:, 2) + Q(:, 2)) .* (Q(:, 1) - X(:, 1)) ...
                 + (R(:, 1) - Q(:, 1)) .* (Q(:, 2) - X(:, 2))) ...
             > 0;
end